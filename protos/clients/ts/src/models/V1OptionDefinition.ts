/* tslint:disable */
/* eslint-disable */
/**
 * sprinkles/v1/api.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1OptionType } from './V1OptionType';
import {
    V1OptionTypeFromJSON,
    V1OptionTypeFromJSONTyped,
    V1OptionTypeToJSON,
} from './V1OptionType';

/**
 * 
 * @export
 * @interface V1OptionDefinition
 */
export interface V1OptionDefinition {
    /**
     * 
     * @type {string}
     * @memberof V1OptionDefinition
     */
    id?: string;
    /**
     * 
     * @type {Date}
     * @memberof V1OptionDefinition
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof V1OptionDefinition
     */
    updatedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof V1OptionDefinition
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof V1OptionDefinition
     */
    description?: string;
    /**
     * 
     * @type {object}
     * @memberof V1OptionDefinition
     */
    defaultValue?: object;
    /**
     * 
     * @type {V1OptionType}
     * @memberof V1OptionDefinition
     */
    optionType?: V1OptionType;
    /**
     * 
     * @type {object}
     * @memberof V1OptionDefinition
     */
    schema?: object;
}

/**
 * Check if a given object implements the V1OptionDefinition interface.
 */
export function instanceOfV1OptionDefinition(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1OptionDefinitionFromJSON(json: any): V1OptionDefinition {
    return V1OptionDefinitionFromJSONTyped(json, false);
}

export function V1OptionDefinitionFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1OptionDefinition {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'updatedAt': !exists(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'defaultValue': !exists(json, 'default_value') ? undefined : json['default_value'],
        'optionType': !exists(json, 'option_type') ? undefined : V1OptionTypeFromJSON(json['option_type']),
        'schema': !exists(json, 'schema') ? undefined : json['schema'],
    };
}

export function V1OptionDefinitionToJSON(value?: V1OptionDefinition | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'created_at': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updated_at': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'name': value.name,
        'description': value.description,
        'default_value': value.defaultValue,
        'option_type': V1OptionTypeToJSON(value.optionType),
        'schema': value.schema,
    };
}

