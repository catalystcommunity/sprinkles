/* tslint:disable */
/* eslint-disable */
/**
 * sprinkles/v1/api.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1Group } from './V1Group';
import {
    V1GroupFromJSON,
    V1GroupFromJSONTyped,
    V1GroupToJSON,
} from './V1Group';
import type { V1OptionDefinition } from './V1OptionDefinition';
import {
    V1OptionDefinitionFromJSON,
    V1OptionDefinitionFromJSONTyped,
    V1OptionDefinitionToJSON,
} from './V1OptionDefinition';

/**
 * 
 * @export
 * @interface V1OptionOverride
 */
export interface V1OptionOverride {
    /**
     * 
     * @type {string}
     * @memberof V1OptionOverride
     */
    id?: string;
    /**
     * 
     * @type {Date}
     * @memberof V1OptionOverride
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof V1OptionOverride
     */
    updatedAt?: Date;
    /**
     * 
     * @type {V1OptionDefinition}
     * @memberof V1OptionOverride
     */
    optionDefinition?: V1OptionDefinition;
    /**
     * 
     * @type {string}
     * @memberof V1OptionOverride
     */
    optionValue?: string;
    /**
     * 
     * @type {V1Group}
     * @memberof V1OptionOverride
     */
    group?: V1Group;
}

/**
 * Check if a given object implements the V1OptionOverride interface.
 */
export function instanceOfV1OptionOverride(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1OptionOverrideFromJSON(json: any): V1OptionOverride {
    return V1OptionOverrideFromJSONTyped(json, false);
}

export function V1OptionOverrideFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1OptionOverride {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'updatedAt': !exists(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
        'optionDefinition': !exists(json, 'optionDefinition') ? undefined : V1OptionDefinitionFromJSON(json['optionDefinition']),
        'optionValue': !exists(json, 'option_value') ? undefined : json['option_value'],
        'group': !exists(json, 'group') ? undefined : V1GroupFromJSON(json['group']),
    };
}

export function V1OptionOverrideToJSON(value?: V1OptionOverride | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'created_at': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updated_at': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'optionDefinition': V1OptionDefinitionToJSON(value.optionDefinition),
        'option_value': value.optionValue,
        'group': V1GroupToJSON(value.group),
    };
}

